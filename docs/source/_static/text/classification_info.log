<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
===============================================================================
● CONFIGURATION: gs_params__stage_1
===============================================================================
● CONFIGURATION: gs_params__stage_2
===============================================================================
● CONFIGURATION: gs_params__stage_3
===============================================================================
● CONFIGURATION: pipeline__lgbm
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: pipeline__sgd
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: resolve_params__stage_2
===============================================================================
● CONFIGURATION: metric__classification_report
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: metric__confusion_matrix
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: metric__custom
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: metric__precision
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: metric__roc_auc
===============================================================================
     ▶ MAKE
===============================================================================
● CONFIGURATION: dataset__test
===============================================================================
     ▶ LOAD
===============================================================================
Data loaded from:
    data/test_transaction.csv
===============================================================================
     ▶ LOAD
===============================================================================
Data loaded from:
    data/test_identity.csv
===============================================================================
     ▶ MERGE
===============================================================================
     ▶ INFO
===============================================================================
Warning: gaps found: 2033556 0.471%,
    see debug.log for details.
===============================================================================
     ▶ PREPROCESS
===============================================================================
No target column(s) found in df:
    ['isFraud']
===============================================================================
● CONFIGURATION: dataset__train
===============================================================================
     ▶ LOAD
===============================================================================
Data loaded from:
    data/train_transaction.csv
===============================================================================
     ▶ LOAD
===============================================================================
Data loaded from:
    data/train_identity.csv
===============================================================================
     ▶ MERGE
===============================================================================
     ▶ INFO
===============================================================================
Warning: gaps found: 2232677 0.516%,
    see debug.log for details.
===============================================================================
     ▶ PREPROCESS
===============================================================================
     ▶ SPLIT
===============================================================================
● CONFIGURATION: workflow__conf
===============================================================================
     ▶ OPTIMIZE
===============================================================================
hp_grid:
    {
    'estimate__predict_proba__classifier__num_leaves': [2, 4, 8, 16, 32]
}
===============================================================================

===============================================================================
CV results:
+----+---------------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
|    |   param_estimate__predict_proba__classifier__num_leaves |   mean_test_metric__roc_auc |   mean_train_metric__roc_auc |   mean_test_metric__precision |   mean_train_metric__precision |   mean_test_metric__custom |   mean_train_metric__custom |
|----+---------------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------|
|  0 |                                                       2 |                    0.799606 |                     0.95358  |                      1        |                              1 |                   1        |                           1 |
|  1 |                                                       4 |                    0.824682 |                     0.995499 |                      0.833333 |                              1 |                   0.833333 |                           1 |
|  2 |                                                       8 |                    0.824581 |                     0.999997 |                      0.870833 |                              1 |                   0.870833 |                           1 |
|  3 |                                                      16 |                    0.824188 |                     1        |                      0.6      |                              1 |                   0.6      |                           1 |
|  4 |                                                      32 |                    0.821284 |                     1        |                      0.615385 |                              1 |                   0.615385 |                           1 |
+----+---------------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
===============================================================================
GridSearch time:
    {'mean_fit_time': 2.488357083002726, 'mean_score_time': 0.3825712045033773}
===============================================================================
GridSearch best index:
    1
===============================================================================
CV best modifiers:
    {
    'estimate__predict_proba__classifier__num_leaves': 4
}
===============================================================================
CV best configuration:
    {
    'estimate__predict_proba__classifier__num_leaves': 4
}
===============================================================================
CV best mean test score metric__roc_auc:
    0.8246822480585818
===============================================================================
Save run(s) results to file:
    /home/nizaevka/Desktop/repos/mlshell/examples/classification/results/runs/1601393769_Linux_runs.csv
===============================================================================
Best run id:
    72d7c0bf-dfaf-4bf5-a3e2-7c80403c051e
===============================================================================
     ▶ OPTIMIZE
===============================================================================
hp_grid:
    {
    'estimate__apply_threshold__threshold': array([0.00983334, 0.12060721, 0.23300827, 0.38316008, 0.46300581,
        0.6847148, 0.98057447, 1.
    ])
}
===============================================================================

===============================================================================
CV results:
+----+----------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
|    |   param_estimate__apply_threshold__threshold |   mean_test_metric__roc_auc |   mean_train_metric__roc_auc |   mean_test_metric__precision |   mean_train_metric__precision |   mean_test_metric__custom |   mean_train_metric__custom |
|----+----------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------|
|  0 |                                   0.00983334 |                    0.862696 |                     0.787545 |                     0.0820606 |                      0.0527592 |                  0.0820606 |                   0.0527592 |
|  1 |                                   0.120607   |                    0.862696 |                     0.787545 |                     0.547138  |                      0.243382  |                  0.547138  |                   0.243382  |
|  2 |                                   0.233008   |                    0.862696 |                     0.787545 |                     0.774798  |                      0.37478   |                  0.774798  |                   0.37478   |
|  3 |                                   0.38316    |                    0.862696 |                     0.787545 |                     0.88141   |                      0.503305  |                  0.88141   |                   0.503305  |
|  4 |                                   0.463006   |                    0.862696 |                     0.787545 |                     0.939394  |                      0.52381   |                  0.939394  |                   0.52381   |
|  5 |                                   0.684715   |                    0.862696 |                     0.787545 |                     1         |                      1         |                  1         |                   1         |
|  6 |                                   0.980574   |                    0.862696 |                     0.787545 |                     0         |                      0         |                  0         |                   0         |
|  7 |                                   1          |                    0.862696 |                     0.787545 |                     0         |                      0         |                  0         |                   0         |
+----+----------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
===============================================================================
GridSearch time:
    {'mean_fit_time': 0.0003666083017985026, 'mean_score_time': 0.0022117793560028076}
===============================================================================
GridSearch best index:
    5
===============================================================================
CV best modifiers:
    {
    'estimate__apply_threshold__threshold': 0.6847148037947504
}
===============================================================================
CV best configuration:
    {
    'estimate__apply_threshold__threshold': 0.6847148037947504
}
===============================================================================
CV best mean test score metric__custom:
    1.0
===============================================================================
Save run(s) results to file:
    /home/nizaevka/Desktop/repos/mlshell/examples/classification/results/runs/1601393808_Linux_runs.csv
===============================================================================
Best run id:
    67f0f02a-9f0b-4369-8e81-47a256a4adce
===============================================================================
     ▶ OPTIMIZE
===============================================================================
hp_grid:
    {
    'pass_custom__kw_args': [{
        'metric__custom': {
            'param_a': 1,
            'param_b': 'c'
        }
    }, {
        'metric__custom': {
            'param_a': 2,
            'param_b': 'd'
        }
    }]
}
===============================================================================

===============================================================================
CV results:
+----+----------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
|    | param_pass_custom__kw_args                         |   mean_test_metric__roc_auc |   mean_train_metric__roc_auc |   mean_test_metric__precision |   mean_train_metric__precision |   mean_test_metric__custom |   mean_train_metric__custom |
|----+----------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------|
|  0 | {'metric__custom': {'param_a': 1, 'param_b': 'c'}} |                    0.862696 |                     0.787545 |                             1 |                              1 |                          1 |                           1 |
|  1 | {'metric__custom': {'param_a': 2, 'param_b': 'd'}} |                    0.862696 |                     0.787545 |                             1 |                              1 |                          1 |                           1 |
+----+----------------------------------------------------+-----------------------------+------------------------------+-------------------------------+--------------------------------+----------------------------+-----------------------------+
===============================================================================
GridSearch time:
    {'mean_fit_time': 0.000368038813273112, 'mean_score_time': 0.002223412195841471}
===============================================================================
GridSearch best index:
    0
===============================================================================
CV best modifiers:
    {
    'pass_custom__kw_args': {
        'metric__custom': {
            'param_a': 1,
            'param_b': 'c'
        }
    }
}
===============================================================================
CV best configuration:
    {
    'pass_custom__kw_args': {
        'metric__custom': {
            'param_a': 1,
            'param_b': 'c'
        }
    }
}
===============================================================================
CV best mean test score metric__custom:
    1.0
===============================================================================
Save run(s) results to file:
    /home/nizaevka/Desktop/repos/mlshell/examples/classification/results/runs/1601393824_Linux_runs.csv
===============================================================================
Best run id:
    90775ed6-642e-4302-81d1-1bb0342b4194
===============================================================================
     ▶ VALIDATE
===============================================================================
metric__roc_auc:
===============================================================================
    dataset__train__train:
    0.9753762721216331
===============================================================================
    dataset__train__test:
    0.8733997654900482
===============================================================================
metric__precision:
===============================================================================
    dataset__train__train:
    1.0
===============================================================================
    dataset__train__test:
    1.0
===============================================================================
metric__custom:
===============================================================================
    dataset__train__train:
    1.0
===============================================================================
    dataset__train__test:
    1.0
===============================================================================
metric__classification_report:
===============================================================================
    dataset__train__train:
    +-----------+-------------+------------+------------+-------------+----------------+
    |           |           0 |          1 |   accuracy |   macro avg |   weighted avg |
    |-----------+-------------+------------+------------+-------------+----------------|
    | precision |    0.982587 |   1        |   0.982714 |    0.991294 |       0.983015 |
    | recall    |    1        |   0.296512 |   0.982714 |    0.648256 |       0.982714 |
    | f1-score  |    0.991217 |   0.457399 |   0.982714 |    0.724308 |       0.978101 |
    | support   | 6828        | 172        |   0.982714 | 7000        |    7000        |
    +-----------+-------------+------------+------------+-------------+----------------+
===============================================================================
    dataset__train__test:
    +-----------+-------------+-----------+------------+-------------+----------------+
    |           |           0 |         1 |   accuracy |   macro avg |   weighted avg |
    |-----------+-------------+-----------+------------+-------------+----------------|
    | precision |    0.973543 |  1        |   0.973667 |    0.986772 |       0.974363 |
    | recall    |    1        |  0.150538 |   0.973667 |    0.575269 |       0.973667 |
    | f1-score  |    0.986594 |  0.261682 |   0.973667 |    0.624138 |       0.964122 |
    | support   | 2907        | 93        |   0.973667 | 3000        |    3000        |
    +-----------+-------------+-----------+------------+-------------+----------------+
===============================================================================
metric__confusion_matrix:
===============================================================================
    dataset__train__train:
    +----+-----+------+
    |    |   1 |    0 |
    |----+-----+------|
    |  1 |  51 |  121 |
    |  0 |   0 | 6828 |
    +----+-----+------+
===============================================================================
    dataset__train__test:
    +----+-----+------+
    |    |   1 |    0 |
    |----+-----+------|
    |  1 |  14 |   79 |
    |  0 |   0 | 2907 |
    +----+-----+------+
===============================================================================
     ▶ PREDICT
===============================================================================
Save predictions for dataset__test to file:
    /home/nizaevka/Desktop/repos/mlshell/examples/classification/results/models/workflow__conf|pipeline__lgbm|dataset__train__train|('metric__custom', 1.0)|dataset__test|Linux|1601393827_pred.csv
===============================================================================
     ▶ DUMP
===============================================================================
Save fitted model to file:
    /home/nizaevka/Desktop/repos/mlshell/examples/classification/results/models/workflow__conf|pipeline__lgbm|dataset__train__train|('metric__custom', 1.0)||Linux|1601393827.model
===============================================================================
